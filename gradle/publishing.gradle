/*
 * Copyright 2012-2013 Canoo Engineering AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'nexus'
apply plugin: 'maven-publish'

ext.pomSpec = {
    name 'Open Dolphin'
    packaging 'jar'
    description 'Dolphin is a free open-source library that bridges the worlds of enterprise Java and desktop Java.' +
        ' It uses presentation models to bind client-side views to server-side actions.'
    url 'http://open-dolphin.org/'

    scm {
        url 'https://github.com/canoo/open-dolphin.git'
        connection 'scm:git@github.com:canoo/open-dolphin.git'
        developerConnection 'scm:git@github.com:canoo/open-dolphin.git'
    }

    licenses {
        license([:]) {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }

    developers {
        developer {
            id 'aalmiray'
            name 'Andres Almiray'
        }
        developer {
            id 'clipp'
            name 'Christoph Lipp'
        }
        developer {
            id 'DieterHolz'
            name 'Dieter Holz'
        }
        developer {
            id 'detlef-brendle'
            name 'Detlef Brendle'
        }
        developer {
            id 'Dierk'
            name 'Dierk Koenig'
        }
        developer {
            id 'svene'
            name 'Sven Ehrke'
        }
        developer {
            id 'jporzelt'
            name 'Johannes Porzelt'
        }
        developer {
            id 'kunsingh'
            name 'Kunal Singh'
        }
        developer {
            id 'Nicolai82'
            name 'Nicolai Kilian'
        }
        developer {
            id 'ToddCostella'
            name 'Todd Costella'
        }
    }
}

modifyPom {
    project(pomSpec)
}

ext {
    isRelease = !version.endsWith('SNAPSHOT')
    isReleaseToCentral = project.hasProperty('mavenCentral')
    nexusUsername = isReleaseToCentral ? sonatypeUser : nexusDeployUser
    nexusPassword = isReleaseToCentral ? sonatypePassword : nexusDeployPassword
}

nexus {
    attachSources = true
    attachTests = false
    attachJavadoc = false
    sign = true
    repositoryUrl = isReleaseToCentral ? sonatypeURL : nexusURL
    snapshotRepositoryUrl = isReleaseToCentral ? sonatypeURL : nexusURL
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact groovydocJar

            pom.withXml {
                // all dependencies should use the default scope (compile) but
                // Gradle insists in using runtime as default
                asNode().dependencies.dependency.each { dep ->
                    if (dep.scope.text() == 'runtime') {
                        dep.remove(dep.scope)
                    }
                }
                asNode().children().last() + pomSpec
            }
        }
    }
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
            'Build-Date': buildDate,
            'Build-Time': buildTime,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Specification-Vendor': 'griffon-framework.org',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'griffon-framework.org'
        )
    }
}